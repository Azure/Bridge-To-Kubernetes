name: integration tests for B2K
on: [push]
jobs:
  job1:
    runs-on: ubuntu-latest
    name: create minikube cluster and deploy todo-app
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster !
      run: kubectl get pods -A
    - name: create todo-app namespace
      run: kubectl create namespace todo-app
    - name: Deploy todo-app
      run:
        kubectl apply -f https://raw.githubusercontent.com/Azure/Bridge-To-Kubernetes/main/samples/todo-app/deployment.yaml -n todo-app
    - name: Wait for pods to be ready
      run: |
        kubectl wait --for=condition=ready pod --all -n todo-app --timeout=300s
        kubectl get pods -n todo-app
    - name: Publish and test
      timeout-minutes: 10
      shell: bash
      run: |
        dotnet publish src/dsc/dsc.csproj -c Debug -r linux-x64 --self-contained true 
        dotnet publish src/endpointmanager/endpointmanager.csproj -c Debug -r linux-x64
        echo 'cd into stats-api folder'
        cd samples/todo-app/stats-api
        echo 'npm install'
        npm i
        echo 'Starting minikube tunnel'
        minikube tunnel  > /dev/null 2>&1 & tunnelPID=$!
        sleep 30
        echo 'verifying if minikube tunnel works'
        curl $(minikube service frontend -n todo-app --url)/api/stats
        #sleep 30
        echo '\nStarting Bridge'
        ## & for parallel execution , && for sequential execution
        ../../../src/dsc/bin/Debug/net6.0/linux-x64/dsc connect --service stats-api --namespace todo-app --local-port 3001 --control-port 51424 --use-kubernetes-service-environment-variables -- npm run start & b2kPID=$!
        echo "b2k process ID is $b2kPID"
        sleep 30
        B2KJOB=jobs -l | grep "dsc"
        if [$B2KJOB =~ 'Running']; then
            echo "b2k is running"
        fi
        echo "evaluating curl response after b2k debugging"
        #CURL_RETURN_CODE=0
        #CURL_OUTPUT=curl -w httpcode=%{http_code} $(minikube service frontend -n todo-app --url)/api/stats 2> /dev/null || CURL_RETURN_CODE=$?
        #if [ ${CURL_RETURN_CODE} -ne 0 ]; then  
        #    echo "Curl connection failed with return code - ${CURL_RETURN_CODE}"
        #else
        #    echo "Curl connection success"
        # Check http code for curl operation/response in  CURL_OUTPUT
        #httpCode=$(echo "${CURL_OUTPUT}" | sed -e 's/.*\httpcode=//')
        #if [ ${httpCode} -ne 200 ]; then
        #    echo "Curl operation/command failed due to server return code - ${httpCode}"
        #fi
        #fi
        #echo "killing minikube tunnel and b2k"
        curl $(minikube service frontend -n todo-app --url)/api/stats
        kill $tunnelPID
        kill $b2kPID

          

