name: integration tests for B2K
on: [push]
jobs:
  job1:
    runs-on: ubuntu-latest
    name: create minikube cluster and deploy todo-app
    steps:
    - uses: actions/checkout@v2
    - name: Start minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster !
      run: kubectl get pods -A
    - name: create todo-app namespace
      run: kubectl create namespace todo-app
    - name: Deploy todo-app
      run:
        kubectl apply -f https://raw.githubusercontent.com/Azure/Bridge-To-Kubernetes/main/samples/todo-app/deployment.yaml -n todo-app
    - name: Wait for pods to be ready
      run: |
        kubectl wait --for=condition=ready pod --all -n todo-app --timeout=300s
        kubectl get pods -n todo-app
    - name: Publish and test
      timeout-minutes: 10
      shell: bash
      run: |
        dotnet publish src/dsc/dsc.csproj -c Debug -r linux-x64 --self-contained true 
        dotnet publish src/endpointmanager/endpointmanager.csproj -c Debug -r linux-x64
        echo 'cd into stats-api folder'
        cd samples/todo-app/stats-api
        echo 'npm install'
        npm i
        echo 'Starting minikube tunnel'
        minikube tunnel  > /dev/null 2>&1 & tunnelPID=$!
        sleep 30
        echo 'verifying if minikube tunnel works'
        curl $(minikube service frontend -n todo-app --url)/api/stats
        #sleep 30
        echo '\nStarting Bridge'
        ## & for parallel execution , && for sequential execution
        ../../../src/dsc/bin/Debug/net6.0/linux-x64/dsc connect --service stats-api --namespace todo-app --local-port 3001 --control-port 51424 --use-kubernetes-service-environment-variables -- npm run start & b2kPID=$!
        sleep 30
        echo "b2k process ID is $b2kPID"
        echo "evaluating curl response after b2k debugging"
        CURL_OUTPUT=$(curl -s -w "%{http_code}" $(minikube service frontend -n todo-app --url)/api/stats)
        echo "curl response is:$CURL_OUTPUT"
        if [[ "$CURL_OUTPUT" =~ "200" ]]; then
            echo "B2K Debugging was successful"
            B2K_LIVE_TEST_FAILED=false
        else 
            echo "B2K Debugging failed"
            B2K_LIVE_TEST_FAILED=true
        fi
        sleep 60
        echo "stopping b2k debugging via control port"
        curl -X POST http://localhost:51424/api/remoting/stop/
        sleep 15
        echo "killing minikube"
        kill $tunnelPID
        echo "live test result (true - failure, false - passed):$B2K_LIVE_TEST_FAILED"
        if [ '$B2K_LIVE_TEST_FAILED' == true ]; then
            exit 1
        else 
            exit 0
        fi

          

